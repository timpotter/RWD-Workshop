/* 

This is where things get interesting. Although the hero area is quite simple, we want to be clever about two things:

1. The way the vertical height responds.
2. The make sure the tag line is vertically centered.

Read on down the code to see how we can do this.

*/

/* LAYOUT */

.container {
	width: 960px;
	margin: 0 auto;
	}


/* HEADER */

header {
	background: #303341;
	width: 100%;
	height: 90px;
	border-bottom: 5px solid #EB5055;
}

h1.logo {
	margin-top: 25px;
	float: left;
  	color: white;
  	font-weight: 100;
}

h1.logo span {
  color: #EB5055;
}

/* NAVIGATION */

nav ul {
	float: right;
	margin-top: 45px;
}

nav ul li {
   display:inline-block;
    padding:0 15px;
    text-transform: uppercase;
}

nav ul li a {
	text-decoration: none;
	color: white;
}

nav ul li a:hover {
	color: #EB5055;
}


/* HERO */

.hero {
	background: #242832 url('../images/hero.jpg') no-repeat center;
	height: 60%; /* a little bit of vertical responsive work going on here */
	width: 100%;
	display: table; /* Remember tables from the "bad old days" of coding? Well we can force an element to behave like one. This makes it easy to vertically align content */
}

.hero .container {
	display: table-cell; /* We've set the containing element as a table and now we've set this element to display as a table-cell inside it. */
	vertical-align: middle; /* Now it's as simple as this declaring the vertical alignment as middle */
}

.hero h2 {
	font-style: italic;
	color: white;
	padding: 0.5em; /* 8px */
	font-size: 3.75em; /* 60px */
	background: rgba(48, 52, 65, 0.7);
	width: 900px; /* We have to reset a width on this tagline and center it */
	margin: 0 auto;
}


